#include "dqt_decoder.hpp"
#include <boost/test/unit_test.hpp>

#include <array>
#include <boost/numeric/ublas/io.hpp>

#include "exceptions.hpp"
#include "testing_shared_data.hpp"
#include "testing_utility.hpp"

BOOST_AUTO_TEST_SUITE(DQTDecoderTests)

BOOST_AUTO_TEST_CASE(Invoke_DQT1) {
  std::array<uint8_t, 67> const Source = {
      0x00, 0x43, 0x00, 0xA0, 0x6E, 0x78, 0x8C, 0x78, 0x64, 0xA0, 0x8C, 0x82,
      0x8C, 0xB4, 0xAA, 0xA0, 0xBE, 0xF0, 0xFF, 0xFF, 0xF0, 0xDC, 0xDC, 0xF0,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};

  const auto Expected = DefineQuantizationTable1();

  Context Ctx;
  invokeDecoderWithDataBuffer<DQTDecoder>(Ctx, Source);

  BOOST_REQUIRE_EQUAL(Ctx.DQT_Vector.size(), 1);
  BOOST_REQUIRE_EQUAL(Expected, Ctx.DQT_Vector.at(0));
}

BOOST_AUTO_TEST_CASE(Invoke_DQT2) {
  std::array<uint8_t, 67> const Source = {
      0x00, 0x43, 0x01, 0xAA, 0xB4, 0xB4, 0xF0, 0xD2, 0xF0, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};

  const auto Expected = DefineQuantizationTable2();

  Context Ctx;
  invokeDecoderWithDataBuffer<DQTDecoder>(Ctx, Source);

  BOOST_REQUIRE_EQUAL(Ctx.DQT_Vector.size(), 2);
  BOOST_REQUIRE_EQUAL(Expected, Ctx.DQT_Vector.at(1));
}

BOOST_AUTO_TEST_CASE(UnimplementedTableElementSize) {
  std::array<uint8_t, 67> const Source = {
      0x00, 0x43, 0x10, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};

  Context Ctx;
  BOOST_CHECK_THROW(invokeDecoderWithDataBuffer<DQTDecoder>(Ctx, Source),
                    NotImplementedException);
}

BOOST_AUTO_TEST_SUITE_END()
